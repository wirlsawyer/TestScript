#!/bin/bash
#================================================
#               Local Variables
#================================================
Section="MTBF-A007_Browser"

event1_name="launch"
event2_name="page 4"
event3_name="page 1"



event1_tcid="MTBF-A007.1"
event2_tcid="MTBF-A007.2"
event3_tcid="MTBF-A007.3"




CompareRetry=5
PeopleVoicePath="/sdcard/ATST/Xml/PeopleVoice.xml"
ZenboVoicePath="/sdcard/ATST/Xml/ZenboVoice.xml"


Func_Prepare()
{
#---------------Prerequisite---------------------
	source /sdcard/ATST/Core/ATST.Variables
	source /sdcard/ATST/Scripts/VariableSettings
	source /sdcard/ATST/Core/ATST.Functions
	am startservice --user 0 -n com.asus.at/.MainService -a RegisterListen
	
	am startservice --user 0 -n com.asus.at/.MainService -a EnableDebugCsr -e AudioPath ""
	WaitForResult
	if [ "$APIResult" == "true" ] ; then
		WriteLog_Info "Enable debug Csr mode Success!" "Action"
		sleep 1
	else
		WriteLog_Info "Enable debug Csr mode Fail!" "Action"
	fi		
}

Func_PeopleSpeak()
{
	am startservice --user 0 -n com.asus.at/.MainService -a DeleteAudioSource
	sleep 1
	am startservice --user 0 -n com.asus.at/.MainService -a SetAudioSource -e XmlFile $PeopleVoicePath -e ID $1
	sleep 1
	am startservice --user 0 -n com.asus.at/.MainService -a TriggerListen
	sleep 1

	i=1
	while [ $i -le $CompareRetry ]
	do
		WriteLog_Info "Compare Zenbo received voice content" "Action"
		am startservice --user 0 -n com.asus.at/.MainService -a PeopleVoiceContentCompare -e XmlFile $PeopleVoicePath -e ID $1
		WaitForResult
		if [ "$APIResult" == "true" ] ; then
			WriteLog_Info "Sentence matched!" "Action"
			am startservice --user 0 -n com.asus.at/.MainService -a DeleteAudioSource
			break;
		fi
		sleep 1
		i=$(($i+1))
	done
}

CompareRetry()
{
	result="Fail"
	CRetry=1
	while [ $CRetry -le $CompareRetry ]
	do
		WriteLog_Info "Compare Zenbo received voice content ID:$1" "Action"
		am startservice --user 0 -n com.asus.at/.MainService -a PeopleVoiceContentCompare -e XmlFile $PeopleVoicePath -e ID $1
		WaitForResult
		if [ "$APIResult" == "true" ] ; then
			am startservice --user 0 -n com.asus.at/.MainService -a DeleteAudioSource
			WriteLog_Info "Sentence matched!" "Action"
			result="Pass"
			break
		fi
		sleep 1
		CRetry=$(($CRetry+1))
	done
	am startservice --user 0 -n com.asus.at/.MainService -a DeleteAudioSource
}

SpeakContentCompareRetry()
{
	result="Fail"
	CRetry=1
	while [ $CRetry -le $CompareRetry ]
	do
		WriteLog_Info "Compare Zenbo Speak content" "Action"
		am startservice --user 0 -n com.asus.at/.MainService -a SpeakContentCompare -e XmlFile $ZenboVoicePath -e ID $1
		WaitForResult
		if [ "$APIResult" == "true" ] ; then
			WriteLog_Info "Sentence matched!" "Action"
			result="Pass"
			break;
		fi
		sleep 3
		CRetry=$(($CRetry+1))
	done
}

#================================================
#               Section Execution
#================================================
#---------------Prerequisite---------------------
Func_Prepare;
WriteLog_StartSection "MTBF-A007_Browser_Test"
loop=1
MTBF_A007_LOOP=1

while [ $loop -le $MTBF_A007_LOOP ]
do
########################################################
GoldenImage="sdcard/atst/GoldenImage.png"
StartX_img=200
StartY_img=100
Width_img=400
Height_img=400

rm $GoldenImage
rm "/sdcard/atst/BrowserImage.png"
########################################################
WriteLog_StartEvent "$event1_name" "$event1_tcid"
#-------------------------------------------------------
echo ----------------------------------
echo [launch]
echo ----------------------------------

am start -n com.asus.robot.browser/com.android.browser.BrowserActivity

Runtime_Permissions
Click_Exception
CheckTopActivity "com.asus.robot.browser/com.android.browser.BrowserActivity" "10"

if [ "$APIResult" == "true" ] ; then
	result="Pass"		
else
	result="Fail"		
fi
echo ----------------------------------
echo [result:$result]
echo ----------------------------------
#-------------------------------------------------------
WriteLog_CheckPoint "$event1_name" "$result"
WriteLog_EndEvent
########################################################	
WriteLog_StartEvent "$event2_name" "$event2_tcid"
#-------------------------------------------------------
echo ----------------------------------
echo [page 4]
echo ----------------------------------
input tap 1070 730
sleep 1
Func_PeopleSpeak "MTBF-A007-002"
# check
sleep 1
CompareRetry "MTBF-A007-002"
echo ----------------------------------
echo [result:$result]
echo ----------------------------------
#-------------------------------------------------------
WriteLog_CheckPoint "$event2_name" "$result"
WriteLog_EndEvent
########################################################
WriteLog_StartEvent "$event3_name" "$event3_tcid"
#-------------------------------------------------------
echo ----------------------------------
echo [page 1]
echo ----------------------------------
input tap 1070 730
sleep 1
Func_PeopleSpeak "MTBF-A007-003"
# check
sleep 1
CompareRetry "MTBF-A007-003"
echo ----------------------------------
echo [result:$result]
echo ----------------------------------
#-------------------------------------------------------
WriteLog_CheckPoint "$event3_name" "$result"
WriteLog_EndEvent
########################################################
# force close app
am force-stop com.asus.robot.browser
########################################################
	loop=$(($loop+1))
done
WriteLog_EndSection
# am startservice --user 0 -n com.asus.at/.MainService -a DisableDebugCsr